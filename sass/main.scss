@use "setup" as *;

// Constants
$breakpoint-large-mobile: 480px;
$breakpoint-tablet: 768px;
$breakpoint-desktop: 1200px;
$breakpoint-desktop-design: 1440px;

// Mixins for responsive design
@mixin respond-to($breakpoint) {
    @media (min-width: $breakpoint) {
        @content;
    }
}

// Custom properties
:root {
    --max-container-width: 1120px;
    --max-page-width: 400px;
    --side-padding: #{$spacing-300};

    @include respond-to($breakpoint-tablet) {
        --max-page-width: 608px;
        --side-padding: #{$spacing-1000};
    }

    @include respond-to($breakpoint-desktop) {
        --max-page-width: min(100%, var(--max-container-width));
        --side-padding: 160px;
    }
}

// Base styles

// disables scrollbar for modern look
@include respond-to($breakpoint-desktop) {
    html,
    body {
        scrollbar-width: none; /* Firefox */
        -ms-overflow-style: none; /* IE/Edge */

        &::-webkit-scrollbar {
            display: none; /* Chrome, Safari */
        }
    }
}

// prevents scrolling when mobile menu overlay is open
body:has(.header__menu-toggle[aria-expanded="true"]) {
    overflow: hidden;
    touch-action: none;

    @include respond-to($breakpoint-desktop) {
        overflow: unset;
        touch-action: unset;
    }
}

button {
    cursor: pointer;
}

a,
a:visited {
    text-decoration: none;
    color: white;
}

// Utility classes
.hidden {
    display: none !important;
}

.sr-only {
    position: absolute;
    width: rem(1px);
    height: rem(1px);
    padding: 0;
    margin: rem(-1px);
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

// Components
.header,
.main,
.footer {
    padding-left: var(--side-padding);
    padding-right: var(--side-padding);
}

.container {
    width: 100%;
    max-width: var(--max-page-width);
    margin: 0 auto;
}

.header {
    @include flex(column, center);
    height: 650px;
    background-image: url("images/mobile/image-hero.jpg");
    background-size: cover;
    background-position: center;

    @include respond-to($breakpoint-tablet) {
        display: block;
        background-image: linear-gradient(
                rgba(0, 0, 0, 0.4),
                rgba(0, 0, 0, 0.4)
            ),
            url("images/desktop/image-hero.jpg");
        background-size: cover;
        background-position: left 57% top 0%;

        padding-top: $spacing-800;
        padding-bottom: $spacing-800;
    }
}

.header__nav {
    width: 100vw;
    @include flex(row, center, center);
    z-index: 10;
    position: fixed;
    left: 0;
    top: 0;

    padding: $spacing-500 0 $spacing-300;

    transition: transform 0.2s, opacity 0.2s, background 0.5s,
        backdrop-filter 0.5s;

    &[aria-hidden="true"] {
        transform: translateY(-20px);
        opacity: 0;
    }

    &--background-active {
        backdrop-filter: blur(10px);
        background-color: rgba(0, 0, 0, 0.3);
    }

    @include respond-to($breakpoint-tablet) {
        padding: $spacing-800 0 $spacing-400;
    }

    @include respond-to($breakpoint-desktop) {
        align-items: start;
    }
}

.header__nav-content {
    @include flex(row, space-between, center);

    width: calc(100vw - (2 * var(--side-padding)));
    max-width: var(--max-page-width);
}

.header__logo {
    z-index: 2;

    svg {
        height: $spacing-300;
    }

    @include respond-to($breakpoint-tablet) {
        svg {
            height: $spacing-400;
        }
    }
}

.header__menu-toggle {
    z-index: 2;

    background: none;
    border: none;
    padding: 0;

    svg {
        height: 16px;
    }

    @include respond-to($breakpoint-desktop) {
        display: none;
    }
}

.header__menu {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background-color: black;
    z-index: 1;

    padding: 30vh var(--side-padding) 0;

    --opening-time: 0.25s;
    transform: translateX(-100%);
    transition: all var(--opening-time);

    @include respond-to($breakpoint-desktop) {
        position: static;
        width: unset;
        padding: 0;
        height: unset;
        transform: unset;
        background-color: unset;
    }
}

.header__menu-list {
    @include flex(column, $align: flex-start, $gap: $spacing-300);
    list-style: none;
    max-width: var(--max-page-width);
    margin: 0 auto;
    @include text-preset-5;
    color: white;

    a:visited {
        color: white;
    }

    transition: all 0.01s;
    transition-delay: var(--opening-time);

    transform: translateY(-50px);
    opacity: 0;

    @include respond-to($breakpoint-desktop) {
        transition: unset;
        transform: unset;
        opacity: 1;

        @include flex(row, $gap: $spacing-400);
        @include text-preset-6;
        color: white;
        text-transform: unset;
    }
}

.header__menu-toggle {
    svg {
        height: 24px;
    }
}

.header__menu-toggle[aria-expanded="true"] + .header__menu {
    transform: translateX(0);

    .header__menu-list {
        transition: all 0.5s;
        transition-delay: 0.2s;
        transform: translateY(0);
        opacity: 1;
    }
}

.header__menu-toggle .line {
    fill: none;
    stroke: #fff;
    stroke-width: 2;
    transition: transform 0.3s ease, opacity 0.3s ease;
    transform-origin: center;
}

.header__menu-toggle[aria-expanded="true"] .line.top {
    transform: rotate(45deg) translate(0, 8px);
}

.header__menu-toggle[aria-expanded="true"] .line.middle {
    opacity: 0;
}

.header__menu-toggle[aria-expanded="true"] .line.bottom {
    transform: rotate(-45deg) translate(0, -8px);
}

.header__menu-link {
    @include respond-to($breakpoint-desktop) {
        position: relative;

        &::before {
            content: "";
            position: absolute;
            height: 2px;
            background-color: white;
            bottom: -$spacing-100;
            left: 50%;
            transform: translateX(-50%);
            width: 0;
            transition: width 0.2s ease-out;
        }

        &:hover::before {
            width: $spacing-300;
        }
    }
}

.header__title {
    padding: 18px $spacing-300;
    border: 2px solid white;

    @include text-preset-3;
    font-size: clamp(32px, -14.5455px + 14.5455vw, 40px);
    color: white;

    @include respond-to($breakpoint-tablet) {
        margin-top: 160px;
        @include text-preset-1;
        color: white;

        padding: $spacing-500 $spacing-500 $spacing-300;

        max-width: calc(var(--max-container-width) * 0.58);
    }
}

.main {
    padding-top: 96px;
    padding-bottom: 98px;

    @include respond-to($breakpoint-tablet) {
        padding-bottom: 87px;
    }

    @include respond-to($breakpoint-desktop) {
        padding-top: 160px;
        padding-bottom: 182px;
    }
}

.main .container {
    @include flex(column, $gap: 96px);

    @include respond-to($breakpoint-desktop) {
        gap: 184px;
    }
}

.leader-section {
    @include flex(column, $align: center);

    @include respond-to($breakpoint-desktop) {
        position: relative;
        @include flex(row);
    }
}

.leader-section__text-content {
    @include flex(column, $gap: $spacing-200);
    padding: $spacing-600 $spacing-300 0;

    text-align: center;

    @include respond-to($breakpoint-desktop) {
        background-color: white;
        position: absolute;
        --min-padding: 64px;
        --max-padding: 96px;
        --fluid-padding: clamp(
            var(--min-padding),
            calc(
                var(--min-padding) + (var(--max-padding) - var(--min-padding)) *
                    (100vw - #{$breakpoint-desktop}) / #{$breakpoint-desktop-design -
                    $breakpoint-desktop}
            ),
            var(--max-padding)
        );

        padding: var(--fluid-padding) 0 0 var(--fluid-padding);

        --min-left: 38%;
        --max-left: 52%;
        left: clamp(
            calc(var(--min-left)),
            calc(
                var(--min-left) + (var(--max-left) - var(--min-left)) *
                    (100vw - #{$breakpoint-desktop}) / #{$breakpoint-desktop-design -
                    $breakpoint-desktop}
            ),
            calc(var(--max-left))
        );
        bottom: 0%;
        text-align: unset;
        gap: $spacing-300;
    }

    // I couldn't get the above to work in Firefox, so this is a workaround
    @supports (-moz-appearance: none) {
        left: var(--min-left);
        padding: var(--min-padding) 0 0 var(--min-padding);

        @include respond-to(1320px) {
            left: 45%;
            padding: 80px 0 0 80px;
        }

        @include respond-to($breakpoint-desktop-design) {
            left: var(--max-left);
            padding: var(--max-padding) 0 0 var(--max-padding);
        }
    }
}

.leader-section__title {
    @include text-preset-4;

    @include respond-to($breakpoint-tablet) {
        @include text-preset-2;
    }
}

.leader-section__description {
    @include text-preset-6;
    color: #808080;
}

.creations-section__header {
    margin-bottom: $spacing-600;

    @include respond-to($breakpoint-tablet) {
        margin-bottom: $spacing-400;
    }

    @include respond-to($breakpoint-desktop) {
        @include flex(row, space-between, center);
        margin-bottom: $spacing-1000;
    }
}
.creations-section__title {
    @include text-preset-4;
    text-align: center;

    @include respond-to($breakpoint-tablet) {
        @include text-preset-2;
    }
}

.creations-section__grid {
    @include flex(column, $gap: $spacing-300);

    @include respond-to($breakpoint-desktop) {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: $spacing-400;
    }
}

.creation-card {
    cursor: pointer;
    position: relative;
    height: 120px;

    @include respond-to($breakpoint-desktop) {
        aspect-ratio: 256 / 450;
        width: auto;
        height: auto;
    }

    &:hover {
        .creation-card__overlay::after {
            background: rgba(255, 255, 255, 0.75);
        }

        .creation-card__title {
            color: black;
        }
    }
}

.creation-card__overlay {
    position: absolute;
    transition: all 0.2s;

    background: linear-gradient(
        to left,
        rgba(0, 0, 0, 0) 0%,
        rgba(0, 0, 0, 0.6) 100%
    );

    inset: 0;
    padding: 20px;

    @include flex(column, flex-end);

    &::after {
        content: "";
        position: absolute;
        inset: 0;
        background: transparent;
        transition: background 0.2s;
        pointer-events: none;
    }

    @include respond-to($breakpoint-tablet) {
        padding: 20px 37px;
    }

    @include respond-to($breakpoint-desktop) {
        padding: $spacing-400 $spacing-500;
        background: linear-gradient(
            to bottom,
            rgba(0, 0, 0, 0) 0%,
            rgba(0, 0, 0, 0.6) 100%
        );
    }
}

.creation-card__image {
    position: absolute;
    object-fit: cover;

    width: 100%;
    height: 100%;

    &--earth {
        @include respond-to($breakpoint-tablet) {
            object-position: left top;
        }
    }

    &--night-arcade {
        @include respond-to($breakpoint-tablet) {
            object-position: left 60%;
        }
    }

    &--soccer {
        @include respond-to($breakpoint-tablet) {
            object-position: left 7%;
        }
    }

    &--the-grid {
        @include respond-to($breakpoint-tablet) {
            object-position: left 33%;
        }
    }

    &--from-above {
        @include respond-to($breakpoint-tablet) {
            object-position: 25% bottom;
        }
    }

    &--borealis {
        @include respond-to($breakpoint-tablet) {
            object-position: center;
        }
    }

    &--curiosity {
        @include respond-to($breakpoint-tablet) {
            object-position: 25% 100%;
        }
    }

    &--fisheye {
        @include respond-to($breakpoint-tablet) {
            object-position: 15% 0%;
        }
    }
}

.creation-card__title {
    z-index: 1;
    @include text-preset-5;
    color: white;

    transition: all 0.2s;

    max-width: 9ch;
    white-space: pre-wrap;
    word-break: keep-all;

    @include respond-to($breakpoint-desktop) {
        @include text-preset-4;
        font-size: clamp(22px, -28px + 4.1667vw, 32px);
        color: white;
    }
}

.creations-section__button {
    @include flex(row, center, center);
    @include text-preset-7;
    text-transform: uppercase;

    background: transparent;
    border: 1px solid black;

    width: 157px;
    height: $spacing-500;
    padding: 0;

    margin: auto;
    margin-top: $spacing-400;

    @include respond-to($breakpoint-desktop) {
        display: none;
    }

    &--desktop {
        display: none;

        margin: 0;

        @include respond-to($breakpoint-desktop) {
            display: unset;
        }
    }

    transition: all 0.2s;

    &:hover {
        background-color: black;
        color: white;
    }
}

.footer {
    background-color: black;
    padding: 56px var(--side-padding);

    @include respond-to($breakpoint-tablet) {
        padding: 43.5px var(--side-padding);
    }
}

.footer .container {
    background-color: black;
    @include flex(column, flex-start, center, $spacing-500);

    ul {
        list-style-type: none;
    }

    @include respond-to($breakpoint-tablet) {
        display: grid;
        grid-auto-flow: column;
        grid-template-columns: auto auto;
        grid-template-rows: auto auto;
        justify-content: space-between;
        gap: $spacing-300;
    }
}

.footer__brand {
    svg {
        height: 24px;
    }
}

.footer__nav-list {
    @include flex(column, $gap: $spacing-200);
    text-align: center;

    @include respond-to($breakpoint-tablet) {
        flex-direction: row;
    }

    @include respond-to($breakpoint-desktop) {
        gap: $spacing-400;
    }
}

.footer__nav-link {
    @include text-preset-6;
    color: white;
    position: relative;

    &::before {
        content: "";
        position: absolute;
        height: 2px;
        background-color: white;
        bottom: -$spacing-100;
        left: 50%;
        transform: translateX(-50%);
        width: 0;
        transition: width 0.2s ease-out;
    }

    &:hover::before {
        width: $spacing-300;
    }
}

.footer__social-list {
    @include flex(row, center, center, $gap: $spacing-200);

    @include respond-to($breakpoint-tablet) {
        justify-self: end;
    }
}

.footer__copyright {
    margin-top: -$spacing-300;
    @include text-preset-6;
    color: #7f7f7f;

    @include respond-to($breakpoint-tablet) {
        margin-top: 0;
        justify-self: end;
    }
}
